<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--配置扫描service下的所有包-->
    <context:component-scan base-package="com.hui.service" />

    <!--1.加载db.properties-->
    <context:property-placeholder location="classpath:db.properties" />
    <!--2.配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--3.获取sqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--加载mybatis核心配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--配置mapper文件-->
        <property name="mapperLocations">
            <list>
                <value>classpath:/mapper/*.xml</value>
                <!--<value>classpath:com/hui/mapper/*.xml</value>-->
            </list>
        </property>
        <!--配置分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--4.扫描mapper文件-->
    <!--将 value="com.hui.mapper"路径底下（即Dao接口）全部扫描注册成Java Bean，并且将Bean class设置为MapperFactoryBean。-->
    <!-- （作用）在业务（service）层使用@Autowires注入Dao接口时返回getObject()对象，即通过代理模式，使用Dao接口后调用了Dao .xml文件中的具体实现类。-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描dao目录下的所有mapper文件-->
        <property name="basePackage" value="com.hui.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
</beans>